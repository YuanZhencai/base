适配器模式将某个类的接口转换成客户端期望的另一个接口表示，
目的是消除由于接口不匹配所造成的类的兼容性问题。
主要分为三类：类的适配器模式、对象的适配器模式、接口的适配器模式

1类的适配器模式
2对象的适配器模式
3接口的适配器模式

在原类型不做任何改变的情况下，扩展了新的接口，灵活且多样的适配一切旧俗。
这种打破旧框框，适配新格局的思想，是面向对象的精髓。
以继承方式实现的类的Adapter模式和以聚合方式实现的对象的Adapter模式，
各有千秋，各取所长。


适用情况

使用的前提：
1．接口中规定了所有要实现的方法
2．但一个要实现此接口的具体类，只用到了其中的几个方法，而其它的方法都是没有用的。
实现方法

1．用一个抽象类实现已有的接口，并实现接口中所规定的所有方法，
这些方法的实现可以都是“平庸”实现----空方法；但此类中的方法是具体的方法，
而不是抽象方法，否则的话，在具体的子类中仍要实现所有的方法，这就失去了适配器本来的作用。
2．原本要实现接口的子类，只实现1中的抽象类即可，并在其内部实现时，只对其感兴趣的方法进行实现。

注意事项

1．充当适配器角色的类就是：实现已有接口的抽象类
2．为什么要用抽象类：
此类是不要被实例化的。而只充当适配器的角色，也就为其子类提供了一个共同的接口，
但其子类又可以将精力只集中在其感兴趣的地方。